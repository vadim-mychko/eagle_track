#!/usr/bin/env python

PACKAGE='eagle_track'
import roslib;
roslib.load_manifest(PACKAGE)

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator();

tracker_enum = gen.enum(
[
  gen.const("Boosting",   int_t, 0, "Boosting tracker"),
  gen.const("MIL",        int_t, 1, "Multiple instance learning"),
  gen.const("KCF",        int_t, 2, "Kernelized correlation filters"),
  gen.const("TLD",        int_t, 3, "Tracking, learning and detection"),
  gen.const("MedianFlow", int_t, 4, "MedianFlow"),
  gen.const("GOTURN",     int_t, 5, "Generic object tracking using regression networks"),
  gen.const("MOSSE",      int_t, 6, "Minimum output sum of squared errors"),
  gen.const("CSRT",       int_t, 7, "Discriminative correlation filter")
], "Tracker type");

# (1) Parameter name
# (2) Parameter type
# (3) Level (?)
# (4) Description
# (5) Default value
# (6) Minimum value
# (7) Maximum value

params_type = gen.add_group("Tracker type parameters");
params_type.add("tracker_type", int_t, 0, "Choose type of the tracker used", 2, 0, 7, edit_method=tracker_enum);

exit(gen.generate(PACKAGE, "eagle_track", "TrackParams"))
